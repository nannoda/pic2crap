{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["console.log(\"index.ts\");\nconst rootDiv = document.getElementById(\"root\") as HTMLDivElement;\n\n\nconst image_selecttor = document.createElement(\"input\");\nconst canvas = document.createElement(\"canvas\");\n\nimage_selecttor.type = \"file\";\nimage_selecttor.accept = \"image/*\";\n\ncanvas.width = 200;\ncanvas.height = 200;\nconst ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\nctx.fillStyle = \"red\";\nctx.fillRect(0, 0, 200, 200);\nctx.fillStyle = \"blue\";\nctx.fillRect(0, 0, 100, 100);\nctx.fillStyle = \"green\";\nctx.fillRect(100, 100, 100, 100);\n\n\nconst addNoiseBtn = document.createElement(\"button\");\naddNoiseBtn.innerText = \"Add Noise\";\naddNoiseBtn.onclick = () => {\n    const noiseCanvas = document.createElement(\"canvas\");\n    noiseCanvas.width = canvas.width;\n    noiseCanvas.height = canvas.height;\n    const noiseCtx = noiseCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    noiseCtx.clearRect(0, 0, noiseCanvas.width, noiseCanvas.height);\n    const imageData = noiseCtx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    for (let i = 0; i < data.length; i += 4) {\n        const r = Math.random() * 255;\n        const g = Math.random() * 255;\n        const b = Math.random() * 255;\n        data[i] = r;\n        data[i + 1] = g;\n        data[i + 2] = b;\n        data[i + 3] = 10;\n    }\n    noiseCtx.putImageData(imageData, 0, 0);\n    ctx.save();\n    // ctx.globalCompositeOperation = \"multiply\";\n    ctx.drawImage(noiseCanvas, 0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\n\nconst jpgCompressBtn = document.createElement(\"button\");\njpgCompressBtn.innerText = \"JPG Compress\";\njpgCompressBtn.onclick = () => {\n    const tmpImg = document.createElement(\"img\");\n    tmpImg.src = canvas.toDataURL(\"image/jpeg\", 0.1);\n    tmpImg.onload = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(tmpImg, 0, 0, canvas.width, canvas.height);\n    }\n\n\n}\n\nimage_selecttor.onchange = async (e) => {\n    if (!e.target) {\n        return;\n    }\n    const target = e.target as HTMLInputElement;\n    if (!target.files) {\n        return;\n    }\n    const file = target.files[0] as File;\n    const img = document.createElement(\"img\");\n    img.src = URL.createObjectURL(file);\n\n    const loaded_image = await new Promise<HTMLImageElement>((resolve, reject) => {\n        img.onload = () => {\n            resolve(img);\n        }\n    }\n    );\n    canvas.width = loaded_image.width;\n    canvas.height = loaded_image.height;\n    ctx.drawImage(loaded_image, 0, 0, loaded_image.width, loaded_image.height);\n}\n\nfunction resetCanvas() {\n    canvas.style.width = \"400px\";\n    canvas.width = 200;\n    canvas.height = 200;\n    ctx.fillStyle = \"red\";\n    ctx.fillRect(0, 0, 200, 200);\n    ctx.fillStyle = \"blue\";\n    ctx.fillRect(0, 0, 100, 100);\n    ctx.fillStyle = \"green\";\n    ctx.fillRect(100, 100, 100, 100);\n}\n\nfunction resetRoot() {\n    while (rootDiv.firstChild) {\n        rootDiv.removeChild(rootDiv.firstChild);\n    }\n    rootDiv.appendChild(document.createElement(\"br\"));\n    rootDiv.appendChild(image_selecttor);\n    rootDiv.appendChild(document.createElement(\"br\"));\n    rootDiv.appendChild(addNoiseBtn);\n    rootDiv.appendChild(jpgCompressBtn)\n    rootDiv.appendChild(document.createElement(\"br\"));\n    rootDiv.appendChild(canvas);\n    resetCanvas();\n}\n\nasync function onImageSelect(e: Event) {\n    if (!e.target) {\n        return;\n    }\n    const target = e.target as HTMLInputElement;\n    if (!target.files) {\n        return;\n    }\n    const file = target.files[0] as File;\n    const img = document.createElement(\"img\");\n    img.src = URL.createObjectURL(file);\n    img.onload = () => {\n        ctx.drawImage(img, 0, 0, 200, 200);\n    }\n}\n\nasync function main() {\n\n    \n    \n    // rootDiv.appendChild(document.createElement(\"br\"));\n    // rootDiv.appendChild(canvas);\n    resetRoot();\n\n\n\n\n}\nmain().then(() => console.log(\"main done\"));\n"],
  "mappings": "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",
  "names": []
}
